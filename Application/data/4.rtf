{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;\red27\green31\blue34;\red255\green255\blue255;
\red10\green77\blue204;\red244\green246\blue249;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;\cssrgb\c14118\c16078\c18039;\cssrgb\c100000\c100000\c100000;
\cssrgb\c1176\c40000\c83922;\cssrgb\c96471\c97255\c98039;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs128 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \
APNS\
\pard\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \cb4 \ulnone \
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 a gem for the Apple Push Notification Service.\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs36 \cf5 \cb1 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf3 \cb4 Install\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 sudo gem install apns\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs36 \cf5 \cb1 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf3 \cb4 Setup:\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 Convert your certificate\
In Keychain access export your certificate as a p12. Then run the following command to convert it to a .pem\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6   \
    openssl pkcs12 -in cert.p12 -out cert.pem -nodes -clcerts\
  \
\pard\pardeftab720\sa320\partightenfactor0

\f2\fs32 \cf3 \cb4 After you have your .pem file. Set what host, port, certificate file location on the\'a0APNS\'a0class:\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6   \
    APNS.host = 'gateway.push.apple.com' \
    # gateway.sandbox.push.apple.com is default\
\
    APNS.pem  = '/path/to/pem/file'\
    # this is the file you just created\
    \
    APNS.port = 2195 \
    # this is also the default. Shouldn't ever have to set this, but just in case Apple goes crazy, you can.\
  \
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs36 \cf5 \cb1 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf3 \cb4 Example (Single notification):\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 Then to send a push notification you can either just send a string as the alert or give it a hash for the alert, badge and sound.\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6   \
    device_token = '123abc456def'\
\
    APNS.send_notification(device_token, 'Hello iPhone!' )\
\
    APNS.send_notification(device_token, :alert => 'Hello iPhone!', :badge => 1, :sound => 'default')\
  \
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs36 \cf5 \cb1 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf3 \cb4 Example (Multiple notifications):\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 You can also send multiple notifications using the same connection to Apple:\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6   \
    device_token = '123abc456def'\
\
    n1 = APNS::Notification.new(device_token, 'Hello iPhone!' )\
\
    n2 = APNS::Notification.new(device_token, :alert => 'Hello iPhone!', :badge => 1, :sound => 'default')\
    \
    APNS.send_notifications([n1, n2])\
  \
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs36 \cf5 \cb1 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf3 \cb4 Send other info along with aps\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 You can send other application specific information as well.\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6   \
    APNS.send_notification(device_token, :alert => 'Hello iPhone!', :badge => 1, :sound => 'default',\
                                         :other => \{:sent => 'with apns gem'\})\
  \
\pard\pardeftab720\sa320\partightenfactor0

\f2\fs32 \cf3 \cb4 This will add the other hash to the same level as the aps hash:\
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6   \
    \{"aps":\{"alert":"Hello iPhone!","badge":1,"sound":"default"\},"sent":"with apns gem"\}\
  \
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs36 \cf5 \cb1 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf3 \cb4 Getting your iPhone\'92s device token\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 After you setup push notification for your application with Apple. You need to ask Apple for you application specific device token.\
\pard\pardeftab720\sl300\partightenfactor0

\f1\b\fs30 \cf5 \cb1 \
\pard\pardeftab720\sl360\sa320\partightenfactor0
\cf3 \cb4 ApplicationAppDelegate.m\
\pard\pardeftab720\sl380\partightenfactor0

\f3\b0\fs27\fsmilli13600 \cf3 \cb6   \
    - (void)applicationDidFinishLaunching:(UIApplication *)application \
    \{    \
        // Register with apple that this app will use push notification\
        [[UIApplication sharedApplication] registerForRemoteNotificationTypes:(UIRemoteNotificationTypeAlert | \
          UIRemoteNotificationTypeSound | UIRemoteNotificationTypeBadge)];\
\
        // Your app startup logic...\
        return YES;\
    \}\
\
    - (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken \
    \{\
        // Convert the binary data token into an NSString (see below for the implementation of this function)\
        NSString *deviceTokenAsString = stringFromDeviceTokenData(deviceToken);\
\
        // Show the device token obtained from apple to the log\
        NSLog(@"deviceToken: %@", deviceTokenAsString);\
    \}\
  \
\pard\pardeftab720\sl300\partightenfactor0

\f1\b\fs30 \cf5 \cb1 \
\pard\pardeftab720\sl360\sa320\partightenfactor0
\cf3 \cb4 stringFromDeviceTokenData function\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf3 This snippet comes from\'a0{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/a/1990880/855846"}}{\fldrslt \cf5 this stackoverflow post\'92s anwser}}.\cf3 \cb1 \uc0\u8232 \cf3 \cb4 \
\pard\pardeftab720\sl380\partightenfactor0

\f3\fs27\fsmilli13600 \cf3 \cb6 \
  \
    NSString* stringFromDeviceTokenData(NSData *deviceToken)\
    \{\
      const char *data = [deviceToken bytes];\
      NSMutableString* token = [NSMutableString string];\
\
for (int i = 0; i < [deviceToken length]; i++) \{\
[token appendFormat:@"%02.2hhX", data[i]];\
\}\
\
return [[token copy] autorelease];\
\}\
\
\pard\pardeftab720\sl380\sa320\partightenfactor0
\cf3 \cb1 \
\pard\pardeftab720\sa320\partightenfactor0

\f2\fs32 \cf3 \cb4 \
\pard\pardeftab720\partightenfactor0
\cf3 For more information on Apple Push Notifications you can see Apple Developer Documentation\'a0{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/library/mac/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/IPhoneOSClientImp/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW2"}}{\fldrslt \cf5 here}}.\
}